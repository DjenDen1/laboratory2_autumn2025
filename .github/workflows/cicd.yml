name: CICD

on:
  push:
    branches: 
      - main
  pull_request:
    branches:
      - main

jobs:
  build-windows:
    runs-on: windows-latest
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4
      
      - name: Clean build directory
        run: |
          if (Test-Path build) {
            Remove-Item -Recurse -Force build
          }
      
      - name: Configure CMake
        run: cmake -S . -B build
        
      - name: Build with CMake
        run: cmake --build build --config Release

      - name: List build contents (Windows)
        run: dir build\

      - name: Upload Windows Artifacts
        uses: actions/upload-artifact@v4
        with:
          name: windows-build
          path: build/

  build-linux:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Clean build directory
        run: rm -rf build

      - name: Install dependencies
        run: |
          sudo apt-get update
          sudo apt-get install -y build-essential cmake

      - name: Configure CMake
        run: cmake -S . -B build

      - name: Build project
        run: cmake --build build --config Release

      - name: List build contents (Linux)
        run: ls -la build/  

      - name: Upload Linux Artifacts
        uses: actions/upload-artifact@v4
        with:
          name: linux-build
          path: build/

  create-release:
    needs: [build-windows, build-linux]  
    runs-on: ubuntu-latest
    if: github.event_name == 'push' && github.ref == 'refs/heads/main' 
    
    steps:
      - name: Checkout code
        uses: actions/checkout@v4
        
      - name: Download Windows Artifacts
        uses: actions/download-artifact@v4
        with:
          name: windows-build
          path: windows-artifacts

      - name: Download Linux Artifacts
        uses: actions/download-artifact@v4
        with:
          name: linux-build
          path: linux-artifacts

      - name: Debug - List downloaded files
        run: |
          echo "Windows artifacts:"
          find windows-artifacts -type f
          echo "Linux artifacts:"
          find linux-artifacts -type f

      - name: Create Release
        id: create_release
        uses: actions/create-release@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          tag_name: v${{ github.run_number }}
          release_name: Release v${{ github.run_number }}
          draft: false
          prerelease: false

      - name: Upload Release Assets
        uses: actions/upload-release-asset@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          upload_url: ${{ steps.create_release.outputs.upload_url }}
          asset_path: ./windows-artifacts/Release/laboratory2.exe  # Уточните путь после отладки
          asset_name: laboratory2.exe
          asset_content_type: application/octet-stream

      - name: Upload Linux Binary
        uses: actions/upload-release-asset@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          upload_url: ${{ steps.create_release.outputs.upload_url }}
          asset_path: ./linux-artifacts/laboratory2  # Уточните путь после отладки
          asset_name: your-app-linux
          asset_content_type: application/octet-stream